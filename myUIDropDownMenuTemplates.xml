<Ui xmlns="http://www.blizzard.com/wow/ui/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.blizzard.com/wow/ui/
..\FrameXML\UI.xsd">
	<!-- <Font name="SystemFont_Shadow_Small" font="Fonts\FRIZQT__.TTF" virtual="true">
		<Shadow>
			<Offset>
				<AbsDimension x="1" y="-1"/>
			</Offset>
			<Color r="0" g="0" b="0"/>
		</Shadow>
		<FontHeight>
			<AbsValue val="10"/>
		</FontHeight>
	</Font>
	<Font name="GameFontNormalSmall" inherits="SystemFont_Shadow_Small" virtual="true">
		<Color r="1.0" g="0.82" b="0"/>
	</Font>
	<Font name="GameFontHighlightSmall" inherits="GameFontNormalSmall" virtual="true">
		<Color r="1.0" g="1.0" b="1.0"/>
	</Font>
	<Font name="GameFontHighlightSmallLeft" inherits="GameFontHighlightSmall" justifyH="LEFT" virtual="true"/> -->
	<Button name="myUIDropDownMenuButtonTemplate" virtual="true">
		<Size x="100" y="16"/>
		<Layers>
			<Layer level="BACKGROUND">
				<Texture name="$parentHighlight" file="Interface\QuestFrame\UI-QuestTitleHighlight" alphaMode="ADD" setAllPoints="true" hidden="true"/>
			</Layer>
			<Layer level="ARTWORK">
				<Texture name="$parentCheck" file="Interface\Buttons\UI-CheckBox-Check">
					<Size x="18" y="18"/>
					<Anchors>
						<Anchor point="LEFT">
							<Offset x="0" y="0"/>
						</Anchor>
					</Anchors>
				</Texture>
				<Texture name="$parentIcon" hidden="true">
					<Size>
						<AbsDimension x="16" y="16"/>
					</Size>
					<Anchors>
						<Anchor point="RIGHT">
							<Offset x="0" y="0"/>
						</Anchor>
					</Anchors>
				</Texture>
			</Layer>
		</Layers>
		<Frames>
			<Button name="$parentColorSwatch" hidden="true">
				<Size>
					<AbsDimension x="16" y="16"/>
				</Size>
				<Anchors>
					<Anchor point="RIGHT">
						<Offset>
							<AbsDimension x="-6" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Layers>
					<Layer level="BACKGROUND">
						<Texture name="$parentSwatchBg">
							<Size>
								<AbsDimension x="14" y="14"/>
							</Size>
							<Anchors>
								<Anchor point="CENTER">
									<Offset>
										<AbsDimension x="0" y="0"/>
									</Offset>
								</Anchor>
							</Anchors>
							<Color r="1.0" g="1.0" b="1.0"/>
						</Texture>
					</Layer>
				</Layers>
				<Scripts>
					<OnClick>
						CloseMenus();
						myUIDropDownMenuButton_OpenColorPicker(this:GetParent());
					</OnClick>
					<OnEnter>
						local _G, _ = _G or getfenv()
						myCloseDropDownMenus(this:GetParent():GetParent():GetID() + 1);
						_G[this:GetName().."SwatchBg"]:SetVertexColor(NORMAL_FONT_COLOR.r, NORMAL_FONT_COLOR.g, NORMAL_FONT_COLOR.b);
						myUIDropDownMenu_StopCounting(this:GetParent():GetParent());
					</OnEnter>
					<OnLeave>
						local _G, _ = _G or getfenv()
						_G[this:GetName().."SwatchBg"]:SetVertexColor(HIGHLIGHT_FONT_COLOR.r, HIGHLIGHT_FONT_COLOR.g, HIGHLIGHT_FONT_COLOR.b);
						myUIDropDownMenu_StartCounting(this:GetParent():GetParent());
					</OnLeave>
				</Scripts>
				<NormalTexture name="$parentNormalTexture" file="Interface\ChatFrame\ChatFrameColorSwatch"/>
			</Button>
			<Button name="$parentExpandArrow" hidden="true">
				<Size>
					<AbsDimension x="16" y="16"/>
				</Size>
				<Anchors>
					<Anchor point="RIGHT">
						<Offset>
							<AbsDimension x="0" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnClick>
						myToggleDropDownMenu(this:GetParent():GetParent():GetID() + 1, this:GetParent().value, nil, nil, nil, nil, this:GetParent().menuList, this);
					</OnClick>
					<OnEnter>
						local _G, _ = _G or getfenv()
						local level =  this:GetParent():GetParent():GetID() + 1;
						local listFrame = _G["DropDownList"..level];
						if ( not listFrame or not listFrame:IsShown() or select(2, listFrame:GetPoint()) ~= this ) then
							myToggleDropDownMenu(level, this:GetParent().value, nil, nil, nil, nil, this:GetParent().menuList, this);
						end
						myUIDropDownMenu_StopCounting(this:GetParent():GetParent());
					</OnEnter>
					<OnLeave>
						myUIDropDownMenu_StartCounting(this:GetParent():GetParent());
					</OnLeave>
				</Scripts>
				<NormalTexture file="Interface\ChatFrame\ChatFrameExpandArrow"/>
			</Button>
			<Button name="$parentInvisibleButton" hidden="true">
				<Anchors>
					<Anchor point="TOPLEFT"/>
					<Anchor point="BOTTOMLEFT"/>
					<Anchor point="RIGHT" relativeTo="$parentColorSwatch" relativePoint="LEFT">
						<Offset>
							<AbsDimension x="0" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnEnter>
						myUIDropDownMenu_StopCounting(this:GetParent():GetParent());
						myCloseDropDownMenus(this:GetParent():GetParent():GetID() + 1);
						local parent = this:GetParent();
						if ( parent.tooltipTitle and parent.tooltipWhileDisabled) then
							if ( parent.tooltipOnButton ) then
								GameTooltip:SetOwner(parent, "ANCHOR_RIGHT");
								GameTooltip:AddLine(parent.tooltipTitle, 1.0, 1.0, 1.0);
								GameTooltip:AddLine(parent.tooltipText);
								GameTooltip:Show();
							else
								GameTooltip_AddNewbieTip(parent, parent.tooltipTitle, 1.0, 1.0, 1.0, parent.tooltipText, 1);
							end
						end
					</OnEnter>
					<OnLeave>
						myUIDropDownMenu_StartCounting(this:GetParent():GetParent());
						GameTooltip:Hide();
					</OnLeave>
				</Scripts>
			</Button>
		</Frames>
		<Scripts>
			<OnLoad>
				this:SetFrameLevel(2);
			</OnLoad>
			<OnClick>
				myUIDropDownMenuButton_OnClick(this, button, down);
			</OnClick>
			<OnEnter>
				local _G, _ = _G or getfenv()
				if ( this.hasArrow ) then
					local level =  this:GetParent():GetID() + 1;
					local listFrame = _G["DropDownList"..level];
					if ( not listFrame or not listFrame:IsShown() or select(2, listFrame:GetPoint()) ~= this ) then
						myToggleDropDownMenu(this:GetParent():GetID() + 1, this.value, nil, nil, nil, nil, this.menuList, this);
					end
				else
					myCloseDropDownMenus(this:GetParent():GetID() + 1);
				end
				_G[this:GetName().."Highlight"]:Show();
				myUIDropDownMenu_StopCounting(this:GetParent());
				if ( this.tooltipTitle ) then
					if ( this.tooltipOnButton ) then
						GameTooltip:SetOwner(this, "ANCHOR_RIGHT");
						GameTooltip:AddLine(this.tooltipTitle, 1.0, 1.0, 1.0);
						GameTooltip:AddLine(this.tooltipText);
						GameTooltip:Show();
					else
						GameTooltip_AddNewbieTip(this, this.tooltipTitle, 1.0, 1.0, 1.0, this.tooltipText, 1);
					end
				end
			</OnEnter>
			<OnLeave>
				local _G, _ = _G or getfenv()
				_G[this:GetName().."Highlight"]:Hide();
				myUIDropDownMenu_StartCounting(this:GetParent());
				GameTooltip:Hide();
			</OnLeave>
		</Scripts>
		<ButtonText name="$parentNormalText">
			<Anchors>
				<Anchor point="LEFT">
					<Offset x="-5" y="0"/>
				</Anchor>
			</Anchors>
		</ButtonText>
		<NormalFont style="GameFontHighlightSmallLeft"/>
		<HighlightFont style="GameFontHighlightSmallLeft"/>
		<DisabledFont style="GameFontDisableSmallLeft"/>
	</Button>
	<Button name="myUIDropDownListTemplate" hidden="true" frameStrata="DIALOG" enableMouse="true" virtual="true">
		<Frames>
			<Frame name="$parentBackdrop" setAllPoints="true">
				<Backdrop bgFile="Interface\DialogFrame\UI-DialogBox-Background-Dark" edgeFile="Interface\DialogFrame\UI-DialogBox-Border" tile="true">
					<BackgroundInsets>
						<AbsInset left="11" right="12" top="12" bottom="9"/>
					</BackgroundInsets>
					<TileSize>
						<AbsValue val="32"/>
					</TileSize>
					<EdgeSize>
						<AbsValue val="32"/>
					</EdgeSize>
				</Backdrop>
			</Frame>
			<Frame name="$parentMenuBackdrop" setAllPoints="true">
				<Backdrop bgFile="Interface\Tooltips\UI-Tooltip-Background" edgeFile="Interface\Tooltips\UI-Tooltip-Border" tile="true">
					<EdgeSize>
						<AbsValue val="16"/>
					</EdgeSize>
					<TileSize>
						<AbsValue val="16"/>
					</TileSize>
					<BackgroundInsets>
						<AbsInset left="5" right="5" top="5" bottom="4"/>
					</BackgroundInsets>
				</Backdrop>
				<Scripts>
					<OnLoad>
						this:SetBackdropBorderColor(TOOLTIP_DEFAULT_COLOR.r, TOOLTIP_DEFAULT_COLOR.g, TOOLTIP_DEFAULT_COLOR.b);
						this:SetBackdropColor(TOOLTIP_DEFAULT_BACKGROUND_COLOR.r, TOOLTIP_DEFAULT_BACKGROUND_COLOR.g, TOOLTIP_DEFAULT_BACKGROUND_COLOR.b);
					</OnLoad>
				</Scripts>
			</Frame>
			<Button name="$parentButton1" inherits="UIDropDownMenuButtonTemplate" id="1"/>
			<Button name="$parentButton2" inherits="UIDropDownMenuButtonTemplate" id="2"/>
			<Button name="$parentButton3" inherits="UIDropDownMenuButtonTemplate" id="3"/>
			<Button name="$parentButton4" inherits="UIDropDownMenuButtonTemplate" id="4"/>
			<Button name="$parentButton5" inherits="UIDropDownMenuButtonTemplate" id="5"/>
			<Button name="$parentButton6" inherits="UIDropDownMenuButtonTemplate" id="6"/>
			<Button name="$parentButton7" inherits="UIDropDownMenuButtonTemplate" id="7"/>
			<Button name="$parentButton8" inherits="UIDropDownMenuButtonTemplate" id="8"/>
		</Frames>
		<Scripts>
			<OnClick>
				this:Hide();
			</OnClick>
			<OnEnter>
				myUIDropDownMenu_StopCounting(this, motion);
			</OnEnter>
			<OnLeave>
				myUIDropDownMenu_StartCounting(this, motion);
			</OnLeave>
			<OnUpdate>
				myUIDropDownMenu_OnUpdate(this, elapsed);
			</OnUpdate>
			<OnShow>
				local _G, _ = _G or getfenv()
				for i=1, MYUIDROPDOWNMENU_MAXBUTTONS do
					if (not this.noResize) then
						_G[this:GetName().."Button"..i]:SetWidth(this.maxWidth);
					end
				end
				if (not this.noResize) then
					this:SetWidth(this.maxWidth+25);
				end
				this.showTime = nil;
				if ( this:GetID() > 1 ) then
					this.parent = _G["DropDownList"..(this:GetID() - 1)];
				end
			</OnShow>
			<OnHide>
				myUIDropDownMenu_OnHide(this);
			</OnHide>
		</Scripts>
	</Button>
	<Frame name="myUIDropDownMenuTemplate" virtual="true">
		<Size>
			<AbsDimension x="40" y="32"/>
		</Size>
		<Layers>
			<Layer level="ARTWORK">
				<Texture name="$parentLeft" file="Interface\Glues\CharacterCreate\CharacterCreate-LabelFrame">
					<Size>
						<AbsDimension x="25" y="64"/>
					</Size>
					<Anchors>
						<Anchor point="TOPLEFT">
							<Offset>
								<AbsDimension x="0" y="17"/>
							</Offset>
						</Anchor>
					</Anchors>
					<TexCoords left="0" right="0.1953125" top="0" bottom="1"/>
				</Texture>
				<Texture name="$parentMiddle" file="Interface\Glues\CharacterCreate\CharacterCreate-LabelFrame">
					<Size>
						<AbsDimension x="115" y="64"/>
					</Size>
					<Anchors>
						<Anchor point="LEFT" relativeTo="$parentLeft" relativePoint="RIGHT"/>
					</Anchors>
					<TexCoords left="0.1953125" right="0.8046875" top="0" bottom="1"/>
				</Texture>
				<Texture name="$parentRight" file="Interface\Glues\CharacterCreate\CharacterCreate-LabelFrame">
					<Size>
						<AbsDimension x="25" y="64"/>
					</Size>
					<Anchors>
						<Anchor point="LEFT" relativeTo="$parentMiddle" relativePoint="RIGHT"/>
					</Anchors>
					<TexCoords left="0.8046875" right="1" top="0" bottom="1"/>
				</Texture>
				<FontString name="$parentText" inherits="GameFontHighlightSmall" justifyH="RIGHT">
					<Size>
						<AbsDimension x="0" y="10"/>
					</Size>
					<Anchors>
						<Anchor point="RIGHT" relativeTo="$parentRight">
							<Offset>
								<AbsDimension x="-43" y="2"/>
							</Offset>
						</Anchor>
					</Anchors>
				</FontString>
			</Layer>
		</Layers>
		<Frames>
			<Button name="$parentButton">
				<Size>
					<AbsDimension x="24" y="24"/>
				</Size>
				<Anchors>
					<Anchor point="TOPRIGHT" relativeTo="$parentRight">
						<Offset>
							<AbsDimension x="-16" y="-18"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnClick>
						myToggleDropDownMenu(nil, nil, this:GetParent());
						PlaySound("igMainMenuOptionCheckBoxOn");
					</OnClick>
				</Scripts>
				<NormalTexture name="$parentNormalTexture" file="Interface\ChatFrame\UI-ChatIcon-ScrollDown-Up">
					<Size>
						<AbsDimension x="24" y="24"/>
					</Size>
					<Anchors>
						<Anchor point="RIGHT"/>
					</Anchors>
				</NormalTexture>
				<PushedTexture name="$parentPushedTexture" file="Interface\ChatFrame\UI-ChatIcon-ScrollDown-Down">
					<Size>
						<AbsDimension x="24" y="24"/>
					</Size>
					<Anchors>
						<Anchor point="RIGHT"/>
					</Anchors>
				</PushedTexture>
				<DisabledTexture name="$parentDisabledTexture" file="Interface\ChatFrame\UI-ChatIcon-ScrollDown-Disabled">
					<Size>
						<AbsDimension x="24" y="24"/>
					</Size>
					<Anchors>
						<Anchor point="RIGHT"/>
					</Anchors>
				</DisabledTexture>
				<HighlightTexture name="$parentHighlightTexture" file="Interface\Buttons\UI-Common-MouseHilight" alphaMode="ADD">
					<Size>
						<AbsDimension x="24" y="24"/>
					</Size>
					<Anchors>
						<Anchor point="RIGHT"/>
					</Anchors>
				</HighlightTexture>
			</Button>
		</Frames>
		<Scripts>
			<OnHide>
				myCloseDropDownMenus();
			</OnHide>
		</Scripts>
	</Frame>
</Ui>
